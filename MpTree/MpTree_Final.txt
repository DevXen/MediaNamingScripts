;-------------- - ---- -   -       -
; MPTree by praetorian
; praetorian@mircscripts.org
; http://detox.xs3.com or http://praetorian7.hypermart.net
;---------------- -   -       -
; this snippet creates an html file containing all files and subdirectories
; in the directory you input.  the html file uses javascript to display all
; of the files and subdirectories in a treeview-like fashion.
;
; feel free to use this snippet as you like.
;
; usage: /mptree [-id3] <output.html> <directory>
;        using the -id3 switch forces the script to output id3 tags for each song (slow)
;
; your mp3 listing will be output to the output file you specify, and a CSS file
; will be created as <the name of your output file>.css.
; so, for example, if you do /mptree metallica.html c:\metallica\, the mp3 list
; will be saved as metallica.html and the CSS file will be saved to metallica.html.css.
;
; in order for your html pages to look correct, you need to specify images to use
; for the folders and files.  you may find the "default" files at:
;
;   http://praetorian.mircscripts.org/mptree
;
; or modify the mptree.folder and mptree.file aliases below to reflect the path and
; filenames of the images you wish to use.
;
; you may also modify the CSS file that is output to create a unique look for each
; of your lists.  the names of everything are pretty self-explanatory.
;
;---- -   -

alias mptree.folder { return mptree_folder.png }
alias mptree.file { return mptree_file.png }

alias -l mpt { return $str($chr(9),$1) }
alias mptree {
  if (!$1-) { echo -a * /mptree: syntax: /mptree [-id3] <output.html> <directory> | return }

  ; if id3 tags arent wanted, set a var and reorder args
  if (-id3 = $1) { %mptree.id3 = $true | tokenize 32 $2- }
  else { %mptree.id3 = $false }

  ; make sure directory exists, clear output file if present and create the css file
  if (!$exists($2-)) { echo -a * /mptree: directory does not exist. | return }
  if (!$exists($1)) {
    write -c $1
    mptree.stylesheet $1
  }

  var %t = $ticks,%c = .fwrite -n mptree
  .fopen -o mptree $1

  ; write the beginning portion of the html file
  %c <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
  %c <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  %c <head>
  %c <meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
  %c <title>MP3 List of $+('..\,$gettok($2-,-1-,92),\') - $adate - Generated by MPTree</title>
  %c <link $+(href=",$+($1,.css),") rel="stylesheet" type="text/css" />

  ; javascript functions to expand/contract folders and show/hide id3 tags
  %c <script type="text/javascript">
  %c function showhide(idarg) $chr(123)
  %c $mpt(1) var idd = idarg + "_d";
  %c $mpt(1) var idf = idarg + "_f";
  %c $mpt(1) if (document.getElementById(idd)) $chr(123)
  %c $mpt(2) var status = document.getElementById(idd).style.display;
  %c $mpt(2) if (status == 'block') $chr(123) document.getElementById(idd).style.display = 'none'; $chr(125)
  %c $mpt(2) else $chr(123) document.getElementById(idd).style.display = 'block'; $chr(125)
  %c $mpt(1) $chr(125)
  %c $mpt(1) if (document.getElementById(idf)) $chr(123)
  %c $mpt(2) var status = document.getElementById(idf).style.display;
  %c $mpt(2) if (status == 'block') $chr(123) document.getElementById(idf).style.display = 'none'; $chr(125)
  %c $mpt(2) else $chr(123) document.getElementById(idf).style.display = 'block'; $chr(125)
  %c $mpt(1) $chr(125)
  %c $chr(125)
  %c function showid3(id3) $chr(123)
  %c $mpt(1) var status = document.getElementById(id3).style.display;
  %c $mpt(1) if (status == 'block') $chr(123) document.getElementById(id3).style.display = 'none'; $chr(125)
  %c $mpt(1) else $chr(123) document.getElementById(id3).style.display = 'block'; $chr(125)
  %c $chr(125)
  %c </script>
  %c </head>
  %c <body>

  ; begin listing of files/folders
  %c <ul class="root">
  var %f = $1,%sd = $calc($count($2-,\) + 1)

  ; list directories
  !.echo -q $finddir($2-,*,*,1,.signal -n mptree %f %sd $1-)

  ; if files exist in the root directory, list them
  if ($findfile($2-,*.mp?,0,1)) {
    %c $mpt(1) <li>
    %c $mpt(2) <table class="rootfile" id="rootfiles">
    !.echo -q $findfile($+(",$2-,"),*.mp?,*,1,mptreewrite $calc(%sd - 1) $1-)
    %c $mpt(2) </table>
    %c $mpt(1) </li>
  }

  ; NOTE: to make files appear before directories on the main page, reverse the order of the two previous sections of code

  ; write the end-of-page stuff
  %c </ul>
  %c <div class="w3c">
  %c $mpt(1) <a href="http://validator.w3.org/check?uri=referer"><img src="http://www.w3.org/Icons/valid-xhtml11" alt="Valid XHTML 1.1!" height="31" width="88" style="border:0;" /></a>
  %c $mpt(1) <a href="http://jigsaw.w3.org/css-validator/check/referer/"><img style="border:0;width:88px;height:31px" src="http://jigsaw.w3.org/css-validator/images/vcss" alt="Valid CSS!" /></a>
  %c </div>
  %c <div class="report">Listed $findfile($+(",$2-,"),*.mp?,0) files and $finddir($+(",$2-,"),*,0) folders in $calc(($ticks - %t) / 1000) seconds.</div>
  %c </body>
  %c </html>

  ; close the output file and unset variables
  .fclose mptree
  unset %mptree.*
}
on 1:signal:mptree:{
  var %f = $1,%sn = $2,%d = $gettok($3-,$+($2,-),92),%sd = $replace($iif($left(%d,1) isnum,$+(x,%d),%d),$chr(32),_,\,-,',-,!,-,$chr(44),-,&,-,$chr(40),-,$chr(41),-,¢,-),%c = .fwrite -n mptree
  var %rd = $finddir($+(",$3-,"),*,0,1)
  var %rf = $findfile($+(",$3-,"),*.mp?,0,1)
  var %ct = $gettok($3-,$+($calc($2 - 1),-),92)
  var %et = $calc($count(%ct,\))
  %c $mpt($calc(%et * 2 - 1)) <!-- $gettok($3-,$+($calc($2 - 1),-),92) $+ \ -->
  %c $mpt($calc(%et * 2 - 1)) <li><a onclick="showhide(' $+ %sd $+ ')" $+ ><img $+(src=",$mptree.folder,") alt="Expand Album" /><span class="foldertitle"> $+ $replace($nopath(%d),&,&amp;) $+ </span></a>
  if (%rd) {
    %c $mpt($calc(%et * 2) - 2) <ul class="folder" id=" $+ %sd $+ _d">
    !.echo -q $finddir($+(",$3-,"),*,*,1,.signal -n mptree %f %sn $1-)
    %c $mpt($calc(%et * 2) - 2) </ul>
  }
  if (%rf) {
    %c $mpt($calc(%et * 2) - 1) <table class="file" id=" $+ %sd $+ _f">
    !.echo -q $findfile($+(",$3-,"),*.mp?,*,1,mptreewrite $calc(%sn - 1) $1-)
    %c $mpt($calc(%et * 2) - 1) </table>
  }
  %c $mpt($calc(%et * 2 - 1)) </li>
}
alias mptreewrite {
  ; output the html for each file.  this looks rather complicated but it is not.

  var %subdirs = $1
  tokenize 32 $2-
  var %c = .fwrite -n mptree,%id = $replace($gettok($1-,2,58),$chr(32),_,\,_,',_,$chr(35),_,$chr(44),-,&,-,$chr(40),-,$chr(41),-,!,-,¢,-)
  if ($nofile($1-) != %mptree.lastpath) { set %mptree.lastpath $v1 | set %mptree.color 1 }
  var %et = $calc(($count($gettok($1-,$+(%subdirs,-),$asc(\)),\)) * 2 - 4)
  %c $mpt(%et) $+ $mpt(3) <!-- $gettok($1-,$+(%subdirs,-),$asc(\)) -->
  %c $mpt(%et) $+ $mpt(3) <tr class=" $+ $iif(%mptree.color = 1,light,dark) $+ ">
  var %idf = alt="Expand ID3 Tags" onclick="showid3(' $+ %id $+ ')" style="cursor: pointer;"
  var %idfn = alt="File Listing"
  %c $mpt(%et) $+ $mpt(4) <td class="fileicon"><img $+(src=",$mptree.file,") $iif(%mptree.id3,%idf,%idfn) /></td>
  %c $mpt(%et) $+ $mpt(4) <td class="tracktitle"> $+ $replace($nopath($1-),&,&amp;) $+ </td>
  %c $mpt(%et) $+ $mpt(4) <td class="filesize"> $+ $bytes($file($1-).size).suf $+ </td>
  %c $mpt(%et) $+ $mpt(4) <td class="bitrate"> $+ $sound($1-).bitrate $+ kbps</td>
  %c $mpt(%et) $+ $mpt(4) <td class="length"> $+ $duration($calc($sound($1-).length / 1000),3) $+ </td>
  %c $mpt(%et) $+ $mpt(3) </tr>

  ; if the -id3 switch is specified, write the table and information for the id3 tags
  ; this will be extremely slow.
  if (%mptree.id3) {
    %c $mpt(%et) $+ $mpt(3) <tr class="id3" id=" $+ %id $+ ">
    %c $mpt(%et) $+ $mpt(4) <td colspan="5">
    %c $mpt(%et) $+ $mpt(5) <table class="id3tags">
    var %it = $iif($sound($1-).title,$v1,-)
    var %in = $iif($sound($1-).track != $null,$v1,-)
    var %ia = $iif($sound($1-).artist,$v1,-)
    var %iy = $iif($sound($1-).year,$v1,-)
    var %icd = $iif($sound($1-).album,$v1,-)
    var %ig = $iif($sound($1-).genre,$v1,-)
    var %ic = $iif($remove($sound($1-).comment,$cr,$lf),$v1,-)
    %c $mpt(%et) $+ $mpt(6) <tr>
    %c $mpt(%et) $+ $mpt(7) <td>Title:</td><td> $replace(%it,&,&amp;) </td>
    %c $mpt(%et) $+ $mpt(7) <td>Track #:</td><td> %in </td>
    %c $mpt(%et) $+ $mpt(6) </tr>
    %c $mpt(%et) $+ $mpt(6) <tr>
    %c $mpt(%et) $+ $mpt(7) <td>Artist:</td><td> $replace(%ia,&,&amp;) </td>
    %c $mpt(%et) $+ $mpt(7) <td>Year:</td><td> %iy </td>
    %c $mpt(%et) $+ $mpt(6) </tr>
    %c $mpt(%et) $+ $mpt(6) <tr>
    %c $mpt(%et) $+ $mpt(7) <td>Album:</td><td> $replace(%icd,&,&amp;) </td>
    %c $mpt(%et) $+ $mpt(7) <td>Genre:</td><td> $replace(%ig,&,&amp;) </td>
    %c $mpt(%et) $+ $mpt(6) </tr>
    %c $mpt(%et) $+ $mpt(6) <tr>
    %c $mpt(%et) $+ $mpt(7) <td>Comment:</td><td colspan="3"> %ic </td>
    %c $mpt(%et) $+ $mpt(6) </tr>
    %c $mpt(%et) $+ $mpt(5) </table>
    %c $mpt(%et) $+ $mpt(4) </td>
    %c $mpt(%et) $+ $mpt(3) </tr>
  }

  ; set a variable for the alternating colors
  set %mptree.color $iif(%mptree.color = 1,0,1)
}

; this just outputs the stylesheet.

alias mptree.stylesheet {
  var %l = $chr(123),%r = $chr(125)
  var %c = write $+($1-,.css)
  %c .root %l font-family: tahoma; font-size: 8pt; list-style-type: none; cursor: pointer; border-collapse: collapse; margin-top: 0px; margin-bottom: 40px; margin-left: 10px; margin-right: 10px; %r
  %c .folder %l list-style-type: none; display: none; cursor: pointer; margin-left: 15px; %r
  %c .file %l list-style-type: none; display: none; cursor: default; width: 800px; border-collapse: collapse; border: 1px dashed #B2B9FA; margin-left: 15px; margin-top: 2px; margin-bottom: 2px; %r
  %c .dark %l font-family: tahoma; font-size: 8pt; background-color: #EBEDFF; %r
  %c .light %l font-family: tahoma; font-size: 8pt; background-color: #F5F6FF;  %r
  %c .indent %l width: 15px; %r
  %c .filesize %l width: 50px; padding-left: 5px; %r
  %c .bitrate %l width: 50px; %r
  %c .length %l width: 50px; padding-left: 5px; %r
  %c .fileicon %l width: 1px; %r
  %c .tracktitle %l width: 600px; %r
  %c .foldertitle %l margin-left: 5px; vertical-align: 30%; display: inline; %r
  %c .id3 %l display: none; %r
  %c .id3tags %l width: 400px; margin-left: 10px; font-family: tahoma; font-size: 8pt; background-color: #FEFBC6; border: 1px dashed #8D8203; margin: 6px; %r
  %c .rootfile %l list-style-type: none; cursor: default; width: 800px; border-collapse: collapse; border: 1px dashed #B2B9FA; margin-top: 2px; margin-bottom: 2px; %r
  %c .report %l text-align: center; font-family: tahoma; font-size: 7pt; margin-top: 10px; %r
  %c .w3c %l text-align: center; margin-top: 100px; %r
}

