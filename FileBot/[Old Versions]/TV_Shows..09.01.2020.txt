{'H:/N/'}{if (s3d) '3D/'}{any{if (episode.special) 'F/'}{model.episodes.flatten().containsAll(episodelist.findAll{it.season == s && it.episode && it.title}) ? 'F/' : 'C/'}}{csv('C:/FileBot Settings/TV/ForeignNetworks.csv').get(info.network)?: '/'}{any{csv('C:/FileBot Settings/TV/TVGenreFolderBasedOnSeriesName.csv').get(n) ?: genres =~ /Anime/ ? 'Animation/Anime/'+genres.minus(/Animation/).minus(/Anime/).minus(/Children/)[0] : genre}{csv('C:/FileBot Settings/TV/TVGenreFolderBasedOnSeriesName.csv').get(n) ?: genres =~ /Animation/ ? 'Animation/'+genres.minus(/Animation/).minus(/Anime/).minus(/Children/)[0] : genre}}{'/'}{norm = {it.upperInitial().lowerTrail().replaceAll(/[`´‘’ʻ""“”]/, "'").replaceAll(/.web./, "web-dl").replaceAll(/[:|]/, " - ").replaceAll(/[?]/, "!").replaceAll(/[*\s]+/, " ").replaceAll(/\b[IiVvXx]+\b/, { it.upper()}).replaceAll(/\b[0-9](?i:th|nd|rd)\b/, {it.lower()})}; norm(n).replaceFirst(/^(?i)(The|A|An)\s(.+)/, /$2, $1/).replaceTrailingBrackets()}{' '+n.match(/\([A-Z]+\)$/)}{if (norm(n) != norm (primaryTitle)) ' ('+norm(primaryTitle)+')'}{s3d ? ' '+'3D':""} {if (y) {' ['+y +']'}}{' '+any{"[$certification]"}{"["+$imdb.certification+"]" }.replaceAll('N A','').replaceAll(/^ \d+$/, 'PG-$0')}{" [$omdb.rating" + "★]"} {any{'['+info.network.match(/\(([^\)]+)\)/).replaceAll(/\(|\)/).upper()+']'}{''}} {csv('C:/FileBot Settings/TV/TVNetwork.csv').get(info.network) ?: '['+info.network.replaceTrailingBrackets()+']'}/{episode.special ? '' : [episodelist.findAll{ it.season == s }.airdate.year.min()]}{episode.special ? '[Specials]' : ' - Season '+s.pad(2)+ ' '}{any{if (episode.special) ''}{def sources = model.findAll{ it.n == n && it.s == s }.source.minus(null).unique(); sources.size() >= 1 ? sources.size() == 1 ? "["+source.upper().replace('WEBRIP','WEBRip').replace('DVDRIP','DVDRip').replace('BDRIP','BDRip').replace('TVRIP','TVRip').replace('DVD','DVDRip').replace('DVDRipRip','DVDRip')+"]" : '[Mixed]' : (fn.upper() =~ /.WEB.|WEBDL|WEB.DL/ ? /[WEB-DL]/ : '[No Source]')}}{model.episodes.flatten().containsAll(episodelist.findAll{it.season == s && it.episode && it.title}) ? '' : episode.special ? '' : ' [Incomplete]'}/{csv('C:/FileBot Settings/TV/TVFileShowNames.csv').get(n) ?: norm(n).replaceTrailingBrackets()}{' '+n.match(/\([A-Z]+\)$/)}{' '+n.match(/\([0-9]+\)$/)} {'- '+S00E00+' -'} {norm(t.replaceAll("\\s*[(]([^)]*)[)]\$", { group, match -> ' (Part '+match.pad(2)+')' }))}{if (episode.special) ' [Special]'}{s3d ? ' '+'3D':""}{' [' + file.path.matchAll(/extended|uncensored|remastered|unrated|uncut|unedited|directors.cut|special.edition|unsold.pilot|broadcast.version|alternate.ending|with.original.commercials|reconstructed|with.commercials|webisode|unaired.pilot|with.original.music|hardsubs|english.dub|high.quality|dual.audio|restored|unaired.episode/).unique()*.upperInitial()*.lowerTrail().sort().join(') (').replaceAll(/ [._]/, " ") + ']'}{" Part $pi"}{" [$minutes Min]"}{" ["+airdate.format("[MM.dd.yyyy]")+"]"}{fn.upper() =~ /.WEB.|WEBDL|WEB.DL/ ? / [WEB-DL/ :" ["+any{source.replace('DVD','DVDRip').replace('DVDRipRip','DVDRip')}{'No Source'}}{" $vf $vc] [$ac $af]"}