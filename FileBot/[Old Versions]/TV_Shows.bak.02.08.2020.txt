{'D[Naming]'}{if (s3d) '3D'}{any{if (episode.special) '[Finished]'}{model.episodes.flatten().containsAll(episodelist.findAll{it.season == s && it.episode && it.title})  '[Finished]'  '[Current]'}}{csv('CFileBot SettingsTVTVGenreFolderBasedOnSeriesName.csv').get(n)  genres =~ Animation  'Animation'+genres.minus(Animation).minus(Children)[0]  genre}{''}{norm = {it.upperInitial().lowerTrail().replaceAll([`´‘’ʻ“”], ').replaceAll(.web., web-dl).replaceAll([],  - ).replaceAll([], !).replaceAll([s]+,  ).replaceAll(b[IiVvXx]+b, { it.upper()}).replaceAll(b[0-9](ithndrd)b, {it.lower()})}; norm(n).replaceFirst(^(i)(TheAAn)s(.+), $2, $1).replaceTrailingBrackets()}{' '+n.match(([A-Z]+)$)}{if (norm(n) != norm (primaryTitle)) ' ('+norm(primaryTitle)+')'}{s3d  ' '+'3D'} {if (y) {' ['+y +']'}}{' '+any{[$certification]}{[+$imdb.certification+] }.replaceAll('N A','').replaceAll(^ d+$, 'PG-$0')}{ [$rating + ★]} {any{'['+info.network.match((([^)]+))).replaceAll(()).upper()+']'}{''}} {csv('CFileBot SettingsTVTVNetwork.csv').get(info.network)  '['+info.network.replaceTrailingBrackets()+']'}{episode.special  ''  [episodelist.findAll{ it.season == s }.airdate.year.min()]}{episode.special  '[Specials]'  ' - Season '+s.pad(2)+ ' '}{any{if (episode.special) ''}{def sources = model.findAll{ it.n == n && it.s == s }.source.minus(null).unique(); sources.size() = 1  sources.size() == 1  sources  '[Mixed]'  (fn.upper() =~ .WEB.WEBDLWEB.DL  [WEB-DL]  '[No Source]')}}{model.episodes.flatten().containsAll(episodelist.findAll{it.season == s && it.episode && it.title})  ''  episode.special  ''  ' [Incomplete]'}{csv('CFileBot SettingsTVTVFileShowNames.csv').get(n)  norm(n).replaceTrailingBrackets()}{' '+n.match(([A-Z]+)$)}{' '+n.match(([0-9]+)$)} {'- '+S00E00+' -'} {norm(t.replaceAll(s[(]([^)])[)]$, { group, match - ' (Part '+match.pad(2)+')' }))}{if (episode.special) ' [Special]'}{s3d  ' '+'3D'}{' [' + file.path.matchAll(extendeduncensoredremasteredunrateduncutunediteddirectors.cutspecial.editionunsold.pilotbroadcast.versionalternate.endingwith.original.commercialsreconstructedwith.commercialswebisodeunaired.pilotwith.original.musichardsubsenglish.dubdual.audiounaired.episode).unique().upperInitial().lowerTrail().sort().join(') (').replaceAll( [._],  ) + ']'}{ Part $pi}{ [$minutes Min]}{ [+airdate.format([MM.dd.yyyy])+]}{fn.upper() =~ .WEB.WEBDLWEB.DL   [WEB-DL]  [+any{source}{'No Source'}}{ $vf $vc] [$ac $af]}